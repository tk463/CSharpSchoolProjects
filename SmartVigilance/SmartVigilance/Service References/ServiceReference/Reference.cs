//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.34014
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmartVigilance.ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IMainService")]
    public interface IMainService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/Login", ReplyAction="http://tempuri.org/IMainService/LoginResponse")]
        int Login([System.ServiceModel.MessageParameterAttribute(Name="login")] string login1, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/Login", ReplyAction="http://tempuri.org/IMainService/LoginResponse")]
        System.Threading.Tasks.Task<int> LoginAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/LoginPhone", ReplyAction="http://tempuri.org/IMainService/LoginPhoneResponse")]
        BLL.UtilisateurDto LoginPhone(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/LoginPhone", ReplyAction="http://tempuri.org/IMainService/LoginPhoneResponse")]
        System.Threading.Tasks.Task<BLL.UtilisateurDto> LoginPhoneAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetRepertoire", ReplyAction="http://tempuri.org/IMainService/GetRepertoireResponse")]
        BLL.RepertoireDto[] GetRepertoire(int IDUtilisateur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetRepertoire", ReplyAction="http://tempuri.org/IMainService/GetRepertoireResponse")]
        System.Threading.Tasks.Task<BLL.RepertoireDto[]> GetRepertoireAsync(int IDUtilisateur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/UpdateRepertoire", ReplyAction="http://tempuri.org/IMainService/UpdateRepertoireResponse")]
        void UpdateRepertoire(BLL.RepertoireDto RepDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/UpdateRepertoire", ReplyAction="http://tempuri.org/IMainService/UpdateRepertoireResponse")]
        System.Threading.Tasks.Task UpdateRepertoireAsync(BLL.RepertoireDto RepDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetInterventions", ReplyAction="http://tempuri.org/IMainService/GetInterventionsResponse")]
        BLL.InterventionDto[] GetInterventions(int IDUtilisateur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetInterventions", ReplyAction="http://tempuri.org/IMainService/GetInterventionsResponse")]
        System.Threading.Tasks.Task<BLL.InterventionDto[]> GetInterventionsAsync(int IDUtilisateur);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMainServiceChannel : SmartVigilance.ServiceReference.IMainService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MainServiceClient : System.ServiceModel.ClientBase<SmartVigilance.ServiceReference.IMainService>, SmartVigilance.ServiceReference.IMainService {
        
        public MainServiceClient() {
        }
        
        public MainServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MainServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Login(string login1, string password) {
            return base.Channel.Login(login1, password);
        }
        
        public System.Threading.Tasks.Task<int> LoginAsync(string login, string password) {
            return base.Channel.LoginAsync(login, password);
        }
        
        public BLL.UtilisateurDto LoginPhone(string login, string password) {
            return base.Channel.LoginPhone(login, password);
        }
        
        public System.Threading.Tasks.Task<BLL.UtilisateurDto> LoginPhoneAsync(string login, string password) {
            return base.Channel.LoginPhoneAsync(login, password);
        }
        
        public BLL.RepertoireDto[] GetRepertoire(int IDUtilisateur) {
            return base.Channel.GetRepertoire(IDUtilisateur);
        }
        
        public System.Threading.Tasks.Task<BLL.RepertoireDto[]> GetRepertoireAsync(int IDUtilisateur) {
            return base.Channel.GetRepertoireAsync(IDUtilisateur);
        }
        
        public void UpdateRepertoire(BLL.RepertoireDto RepDto) {
            base.Channel.UpdateRepertoire(RepDto);
        }
        
        public System.Threading.Tasks.Task UpdateRepertoireAsync(BLL.RepertoireDto RepDto) {
            return base.Channel.UpdateRepertoireAsync(RepDto);
        }
        
        public BLL.InterventionDto[] GetInterventions(int IDUtilisateur) {
            return base.Channel.GetInterventions(IDUtilisateur);
        }
        
        public System.Threading.Tasks.Task<BLL.InterventionDto[]> GetInterventionsAsync(int IDUtilisateur) {
            return base.Channel.GetInterventionsAsync(IDUtilisateur);
        }
    }
}
